function leapYear(year) {
    if ( year % 4 === 0 ) return 1; 
    if ( year % 100 === 0 ) return 1; 
    if ( year % 400 === 0) return 1; 
    else return 0; 
}


function prevDate ( yyyy, mm, dd ) 
{ // function prevDate starts 
var day = dd;
var month = mm;
var year = yyyy; 

day = day-1; 

let monthsinYear = [1,2,3,4,5,6,7,8,9,10,11,12];
let daysinMonth = [31,28,31,30,31,30,31,31,30,31,30,31];

if ( month === 3 )
{ 
    if (day === 0 )
    {
        if(leapYear(year)) 
        {
            day = 29;
            month = 2; 
        } // check if leap year 
        else 
        {
         day = 28;
         month = 2; 
        } // non leap year 

    } // move to february if day = 0 

} //if loop ends for month = 3 

else // other than 3rd month 
if ( day === 0  ) 
{ 
            if ( month === 2 || month === 4 || month === 6 || month === 9 || month === 11 )
                { 
                     day = 31; 
                    month--;
                } // moving to 31 days month 

            else 
                { 

                    if ( month === 8 )
 
                        {
                            day = 31;
                            month--; 
                        } // month = 8 

                    else 
                        {
                            day = 30;
                            month--; 
                        } // month is 

                } 
} // day = 0 

if ( month === 0 )
{ 
 day = 31;
 month = 12; 
 year--;    
}

return [ year, month, day ]; 

} // function prevDate ends 


let calcDate = prevDate(2022,31,5);
console.log(calcDate); 

function createDifferentDateFormats(yyyy, mm, dd) 
{
  var yyyymmdd = yyyy + mm + dd;
  var mmddyyyy = mm + dd + yyyy;
  var ddmmyyyy = dd + mm + yyyy;
  var ddmmyy = dd + mm + yyyy.slice(-2);
  var mmddyy = mm + dd + yyyy.slice(-2);
  var yyddmm = yyyy.slice(-2) + dd + mm;

  return [yyyymmdd, mmddyyyy, ddmmyyyy, ddmmyy, mmddyy, yyddmm];
}

// previousPalindromeDateCalc receives string and number 

function previousPalindromeDateCalc ( yyyy, mm, dd, isPalindrome ) 
{ 
    var day = Number(dd);
    var month = Number(mm);
    var year = Number(yyyy);
    let counterCalc = 0; 
    let returnDate; 

    // for each date recieved, calculate next date, calculate if its palindrome for all formats, check if any palindrome in results lists, break loop and return counter value and date 

do 
    {                
        // do start 
        // converted to string to calculate prev date, function demands number type.
        
        var prevDateMade = prevDate ( year, month, day ); // returns an array of numbers 
        counterCalc++;

        // turn into standard format 

                var pYear = prevDateMade[0].toString();

                if ( pMonth < 10 )
                var pMonth = "0"+prevDateMade[1];
                else 
                var pMonth = prevDateMade[1].toString();

                if ( pDay < 10 )
                var pDay = "0"+prevDateMade[2]; 
                else 
                var pDay = prevDateMade[2].toString(); 

        // turn it into a string to calculate formats 
        var diffDateFormatsArray = createDifferentDateFormats(pYear, pMonth, pDay);

        // send array of different formats into palindrome function. 
        var checkResultsForDates = checkPalindromeForAllDates(diffDateFormatsArray);

        let list = []; 
        // received list which has palindrome or not values; navigating through it.
        for  ( let i = 0; i<checkResultsForDates.length; i++)
            { 
                if[checkResultsForDates[i]]
                { isPalindrome = 1; returnDate = prevDateMade; }
                else 
                { isPalindrome = 0; }

                if(isPalindrome) break; 
            }


         year = prevDateMade[0];
         month = prevDateMade[1];
         day = prevDateMade[2];   

} while(!isPalindrome); 

return [ counterCalc, returnDate]; 

}



