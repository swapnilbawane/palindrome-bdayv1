22-11-2022 palindrome.
for 23-11-2022 should show, 1 day missed.  

function createDifferentDateFormats(yyyy, mm, dd) 
{
  var yyyymmdd = yyyy + mm + dd;
  var mmddyyyy = mm + dd + yyyy;
  var ddmmyyyy = dd + mm + yyyy;
  var ddmmyy = dd + mm + yyyy.slice(-2);
  var mmddyy = mm + dd + yyyy.slice(-2);
  var yyddmm = yyyy.slice(-2) + dd + mm;

  return [yyyymmdd, mmddyyyy, ddmmyyyy, ddmmyy, mmddyy, yyddmm];
}

// previousPalindromeDateCalc receives string and number 

function previousPalindromeDateCalc ( yyyy, mm, dd, isPalindrome ) 
{ 
    var day = Number(dd);
    var month = Number(mm);
    var year = Number(yyyy);
    let counterCalc = 0; 
    let returnDate; 

    // for each date recieved, calculate next date, calculate if its palindrome for all formats, check if any palindrome in results lists, break loop and return counter value and date 

do 
    {                
        // do start 
        // converted to string to calculate prev date, function demands number type.
        
        var prevDateMade = prevDate ( year, month, day ); // returns an array of numbers 
        counterCalc++;

        // turn into standard format 

                var pYear = prevDateMade[0].toString();

                if ( pMonth < 10 )
                var pMonth = "0"+prevDateMade[1];
                else 
                var pMonth = prevDateMade[1].toString();

                if ( pDay < 10 )
                var pDay = "0"+prevDateMade[2]; 
                else 
                var pDay = prevDateMade[2].toString(); 

        // turn it into a string to calculate formats 
        var diffDateFormatsArray = createDifferentDateFormats(pYear, pMonth, pDay);

        // send array of different formats into palindrome function. 
        var checkResultsForDates = checkPalindromeForAllDates(diffDateFormatsArray);

        let list = []; 
        // received list which has palindrome or not values; navigating through it.
        for  ( let i = 0; i<checkResultsForDates.length; i++)
            { 
                if[checkResultsForDates[i]]
                { isPalindrome = 1; returnDate = prevDateMade; }
                else 
                { isPalindrome = 0; }

                if(isPalindrome) break; 
            }


         year = prevDateMade[0];
         month = prevDateMade[1];
         day = prevDateMade[2];   

} while(!isPalindrome); 

return [ counterCalc, returnDate]; 

}
